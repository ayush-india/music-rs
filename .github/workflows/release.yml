name: Release
on: push # edit this to only work when a tag is released ;? https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-including-branches-and-tags
      
env:
  CARGO_TERM_COLOR: always
  BIN_NAME: player
  PROJECT_NAME: music-rs
  REPO_NAME: ayush-india/music-rs

jobs:
  dist:
    name: Dist
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # don't fail other jobs if one fails
      matrix:
        build: [x86_64-linux ] #,aarch64-macos] #, aarch64-linux, x86_64-macos, x86_64-windows] #, x86_64-win-gnu, win32-msvc
        include:
        - build: x86_64-linux
          os: ubuntu-20.04
          rust: stable
          target: x86_64-unknown-linux-gnu
          cross: false

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install ${{ matrix.rust }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true

      - name: Install developer package dependencies
        if: matrix.build == 'x86_64-linux'
        run: sudo apt-get update && sudo apt-get install libpulse-dev portaudio19-dev libasound2-dev libsdl2-dev gstreamer1.0-dev libgstreamer-plugins-base1.0-dev libavahi-compat-libdnssd-dev libgstreamer-plugins-bad1.0-dev
  
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross }}
          command: test
          args: --release --locked --target ${{ matrix.target }}

      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross }}
          command: build
          args: --release --locked --target ${{ matrix.target }}

      - name: Rename release binary
        shell: bash
        run: mkdir bin && mv target/${{ matrix.target }}/release/$BIN_NAME bin/${{ matrix.target }}-$BIN_NAME
      - name: print dir
        shell: bash
        run: tree .
      - name: strip
        shell: bash
        run: strip "bin/${{ matrix.target }}-$BIN_NAME"

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: binaries
          path: bin/

  publish:
    name: Publish
    needs: [dist]
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: false

      - uses: actions/download-artifact@v2
        with:
          path: binaries

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: print dir
        shell: bash
        run: tree .

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          draft: true
          allowUpdates: true
          tag: ${{ steps.tag_version.outputs.new_tag }}
          artifacts: "binaries/binaries/*"
          artifactErrorsFailBuild: true
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}

